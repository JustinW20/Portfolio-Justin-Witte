/* breakpoints.js v1.0 | @ajlkn | MIT licensed */
var breakpoints=function(){"use strict";function e(e){t.init(e)}var t={list:null,media:{},events:[],init:function(e){t.list=e,window.addEventListener("resize",t.poll),window.addEventListener("orientationchange",t.poll),window.addEventListener("load",t.poll),window.addEventListener("fullscreenchange",t.poll)},active:function(e){var n,a,s,i,r,d,c;if(!(e in t.media)){if(">="==e.substr(0,2)?(a="gte",n=e.substr(2)):"<="==e.substr(0,2)?(a="lte",n=e.substr(2)):">"==e.substr(0,1)?(a="gt",n=e.substr(1)):"<"==e.substr(0,1)?(a="lt",n=e.substr(1)):"!"==e.substr(0,1)?(a="not",n=e.substr(1)):(a="eq",n=e),n&&n in t.list)if(i=t.list[n],Array.isArray(i)){if(r=parseInt(i[0]),d=parseInt(i[1]),isNaN(r)){if(isNaN(d))return;c=i[1].substr(String(d).length)}else c=i[0].substr(String(r).length);if(isNaN(r))switch(a){case"gte":s="screen";break;case"lte":s="screen and (max-width: "+d+c+")";break;case"gt":s="screen and (min-width: "+(d+1)+c+")";break;case"lt":s="screen and (max-width: -1px)";break;case"not":s="screen and (min-width: "+(d+1)+c+")";break;default:s="screen and (max-width: "+d+c+")"}else if(isNaN(d))switch(a){case"gte":s="screen and (min-width: "+r+c+")";break;case"lte":s="screen";break;case"gt":s="screen and (max-width: -1px)";break;case"lt":s="screen and (max-width: "+(r-1)+c+")";break;case"not":s="screen and (max-width: "+(r-1)+c+")";break;default:s="screen and (min-width: "+r+c+")"}else switch(a){case"gte":s="screen and (min-width: "+r+c+")";break;case"lte":s="screen and (max-width: "+d+c+")";break;case"gt":s="screen and (min-width: "+(d+1)+c+")";break;case"lt":s="screen and (max-width: "+(r-1)+c+")";break;case"not":s="screen and (max-width: "+(r-1)+c+"), screen and (min-width: "+(d+1)+c+")";break;default:s="screen and (min-width: "+r+c+") and (max-width: "+d+c+")"}}else s="("==i.charAt(0)?"screen and "+i:i;t.media[e]=!!s&&s}return t.media[e]!==!1&&window.matchMedia(t.media[e]).matches},on:function(e,n){t.events.push({query:e,handler:n,state:!1}),t.active(e)&&n()},poll:function(){var e,n;for(e=0;e<t.events.length;e++)n=t.events[e],t.active(n.query)?n.state||(n.state=!0,n.handler()):n.state&&(n.state=!1)}};return e._=t,e.on=function(e,n){t.on(e,n)},e.active=function(e){return t.active(e)},e}();!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?module.exports=t():e.breakpoints=t()}(this,function(){return breakpoints});

document.onreadystatechange = function () {
    var icons = document.querySelectorAll(".brands");

    for(var i in icons){
        var iconElem = icons[i];
        iconElem.onclick = function () {
            if(this.getAttribute("name-value") == "linkedin"){
                window.location.href = 'https://www.linkedin.com/in/justin-witte-a78595226/';
            }
            else if(this.getAttribute("name-value") == "github"){
                window.location.href = 'https://github.com/JustinW20';
            }
        }
    }

    var projects = document.querySelectorAll(".project");

    for(var i in projects){
        var projectElem = projects[i];
        projectElem.onclick = function () {
            if(this.getAttribute("name-value") == "Invasion"){
                window.location.href = "Projects/Invasion/invasion.html";
            }
            else if(this.getAttribute("name-value") == "ItCameDownFromSpace"){
                window.location.href = "Projects/ItCameDownFromSpace/itCameDownFromSpace.html";
            }
            else if(this.getAttribute("name-value") == "DariosCarnage"){
                window.location.href = "Projects/DariosCarnage/dariosCarnage.html";
            }
            else if(this.getAttribute("name-value") == "Questbook"){
                window.location.href = "Projects/Questbook/questbook.html";
            }
            else if(this.getAttribute("name-value") == "Psychosis"){
                window.location.href = "Projects/Psychosis/psychosis.html";
            }
        }
    }

    var builds = document.querySelectorAll(".build");

    for(var i in builds){
        var buildElem = builds[i];
        buildElem.onclick = function () {
            if(this.getAttribute("name-value") == "Invasion"){
                window.location.href = "https://drive.google.com/drive/folders/11onJAaCniZh9No9FqfFY36FbKV7pqhS5?usp=sharing";
            }
            else if(this.getAttribute("name-value") == "ItCameDownFromSpace"){
                window.location.href = "https://drive.google.com/drive/folders/1Z4ywLfVJTihNWCBIvQCssoZRuH_wHnh6?usp=sharing";
            }
            else if(this.getAttribute("name-value") == "DariosCarnage"){
                window.location.href = "https://drive.google.com/drive/folders/1CgmCk4MEynfrHz7S8XTUlBfwPPeORKf_?usp=sharing";
            }
            else if(this.getAttribute("name-value") == "Questbook"){
                window.location.href = "https://drive.google.com/drive/folders/1buLJkH35Z0cWsNwDgyeSq9c1VW1FjxYW?usp=sharing";
            }
        }
    }

    var snippets = document.querySelectorAll(".snippet");
    
    for(var i in snippets){
        var snippetElem = snippets[i];
        snippetElem.onclick = function () {
            if(this.getAttribute("name-value") == "Invasion"){
                window.location.href = "Code/invasionCodeSnippets.html";
            }
            else if(this.getAttribute("name-value") == "ItCameDownFromSpace"){
                window.location.href = "Code/itCameDownFromSpaceCodeSnippets.html";
            }
            else if(this.getAttribute("name-value") == "DariosCarnage"){
                window.location.href = "Code/dariosCarnageCodeSnippets.html";
            }
            else if(this.getAttribute("name-value") == "Questbook"){
                window.location.href = "Code/questbookCodeSnippets.html";
            }
            else if(this.getAttribute("name-value") == "Psychosis"){
                window.location.href = "Code/psychosisCodeSnippets.html";
            }
        }
    }
}

let slideIndex = 1;
showSlides(slideIndex);

// Next/previous controls
function plusSlides(n) {
  showSlides(slideIndex += n);
}

// Thumbnail image controls
function currentSlide(n) {
  showSlides(slideIndex = n);
}

function showSlides(n) {
  let i;
  let slides = document.getElementsByClassName("mySlides");
  let dots = document.getElementsByClassName("demo");
  let captionText = document.getElementById("caption");
  if (n > slides.length) {slideIndex = 1}
  if (n < 1) {slideIndex = slides.length}
  for (i = 0; i < slides.length; i++) {
    slides[i].style.display = "none";
  }
  for (i = 0; i < dots.length; i++) {
    dots[i].className = dots[i].className.replace(" active", "");
  }
  slides[slideIndex-1].style.display = "block";
  dots[slideIndex-1].className += " active";
  captionText.innerHTML = dots[slideIndex-1].alt;
}